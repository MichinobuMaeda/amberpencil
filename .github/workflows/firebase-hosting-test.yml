name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - 'test'
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '16'
      FLUTTER_VERSION: '2.8.1'

    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: functionschanged
        with:
          base: 'test'
          filters: |
            src:
              - 'functions/**'

      - name: For test - firebase project
        run: sed 's/amberpencil/amberpencil-test/' -i .firebaserc
      - name: For test - firebase options
        run: cp lib/config/firebase_options_test.dart lib/config/firebase_options.dart

      - name: Set firebase api key
        run: |
          sed 's/FIREBASE_API_KEY/${{ secrets.FIREBASE_API_KEY_AMBERPENCIL_TEST }}/' \
            -i lib/config/firebase_options.dart
      - name: Set UI version
        run: |
          VERSION=`grep 'version:' pubspec.yaml | sed 's/.*\s//'` && \
            sed "s/for\ test/$VERSION/" -i lib/config/app_info.dart  && \
            echo "{\"version\":\"$VERSION\"}" > web/version.json && \
            echo $VERSION

      - name: Cache functions/node_modules
        uses: actions/cache@v2
        id: cache-functions-node_modules
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-${{ hashFiles('functions/yarn.lock') }}

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm -g i yarn
      - run: yarn install --frozen-lockfile

      - if: steps.functionschanged.outputs.src == 'true'
        run: |
          yarn --cwd functions install --frozen-lockfile && \
          yarn --cwd functions lint && \
          yarn --cwd functions test && \
          yarn deploy --only functions --force \
            --token "${{ secrets.FIREBASE_TOKEN_AMBERPENCIL_TEST }}"
      - run: |
          yarn deploy --only storage,firestore \
            --token "${{ secrets.FIREBASE_TOKEN_AMBERPENCIL_TEST }}"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      - run: flutter pub get
      # - run: flutter test
      - run: flutter build web

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AMBERPENCIL_TEST }}'
          channelId: live
          projectId: amberpencil-test
      - name: Call setup api
        run: curl https://asia-northeast1-amberpencil-test.cloudfunctions.net/api/setup
